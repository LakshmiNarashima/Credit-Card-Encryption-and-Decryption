from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
import base64

# Key should be 16, 24, or 32 bytes for AES-128, AES-192, and AES-256
SECRET_KEY = get_random_bytes(16)

def pad(data):
    return data + (16 - len(data) % 16) * chr(16 - len(data) % 16)

def unpad(data):
    return data[:-ord(data[len(data) - 1:])]

def encrypt_card_number(card_number):
    cipher = AES.new(SECRET_KEY, AES.MODE_CBC)
    ct_bytes = cipher.encrypt(pad(card_number).encode('utf-8'))
    iv = cipher.iv
    encrypted_data = base64.b64encode(iv + ct_bytes).decode('utf-8')
    return encrypted_data

def decrypt_card_number(encrypted_data):
    encrypted_data = base64.b64decode(encrypted_data)
    iv = encrypted_data[:16]
    ct = encrypted_data[16:]
    cipher = AES.new(SECRET_KEY, AES.MODE_CBC, iv)
    decrypted_data = unpad(cipher.decrypt(ct)).decode('utf-8')
    return decrypted_data
